name: Live Elements Js Compiler Build Matrix

on: [push, pull_request]

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-18.04]
        include:
        - os: macos-latest
          NAME: macos
          TARGET: x86_64-apple-darwin
          COMPILER: clang
          LINKER: clang
        - os: ubuntu-18.04
          NAME: ubuntu
          TARGET: x86_64-linux
          COMPILER: g++
          LINKER: g++

    env:
      ARCHIVE_FILENAME: live-elements-js-compiler-${{github.event.release.tag_name}}-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz

    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
        
      - name: Install ubuntu deps
        if: contains(matrix.os, 'ubuntu-18.04')
        run: sudo apt install mesa-common-dev libglu1-mesa-dev

      - name: Install deps
        run: npm install

      - name: Build
        run: |
          npm run setupqt
          npm run cmake

      - name: Compress files on windows
        if: github.ref == 'refs/heads/master' && contains(matrix.os, 'windows-latest')
        uses: a7ul/tar-action@v1.0.2
        id: compress-windows
        with:
          command: c
          cwd: ./build/Release
          files: |
            ./live_elements_js_compiler.node
            ./live_elements_js_compiler.lib
            ./live_elements_js_compiler.exp
          outPath: ${{ env.ARCHIVE_FILENAME }}

      - uses: actions/upload-artifact@v1
        if: github.ref == 'refs/heads/master' && contains(matrix.os, 'windows-latest')
        with:
          name: ${{ env.ARCHIVE_FILENAME }}
          path: ${{ env.ARCHIVE_FILENAME }}

      - name: Upload release binaries
        if: github.ref == 'refs/heads/master' && contains(matrix.os, 'windows-latest')
        uses: alexellis/upload-assets@0.2.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["${{ env.ARCHIVE_FILENAME }}"]'

  publish:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      - name: Install ubuntu deps
        run: sudo apt update
      - run: sudo apt install mesa-common-dev libglu1-mesa-dev
      - run: npm install
      - run: echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' >> .npmrc
      - run: npm publish --access=public
        env:
          NPM_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
          CMAKE_BUILD_PARALLEL_LEVEL: 8
    